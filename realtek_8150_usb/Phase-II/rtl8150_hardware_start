static void rtl8150_hardware_start(struct net_device *netdev)
{
        u8 data=0x10;
        u8 cr=0x0c;
        u8 tcr=0xd8;
        u8 rcr=0x9e;
        short tmp;
        int i = HZ;

        // Get address of device private structure

        /* CODE HERE */

        printk("Entering %s\n", __FUNCTION__);

        // Reset the chip. Make sure to wait for chip to reset
        usb_control_msg(priv->udev, usb_sndctrlpipe(priv->udev,0),
                RTL8150_REQ_SET_REGS, RTL8150_REQT_WRITE,CR,0,&data,1,500);

        // Confirm it that device has been reset successfully
         do {
          usb_control_msg(priv->udev, usb_rcvctrlpipe(priv->udev,0),
                RTL8150_REQ_GET_REGS, RTL8150_REQT_READ,CR,0,&data,1,500);
        } while ((data & 0x10) && --i);


        printk (KERN_INFO "\n DEVICE IS RESET SUCCESSFULLY\n");

        // Set RCR, TCR and CR registers to values in rcr,tcr and cr 
	// using usb_control_msg()

	/* CODE HERE */

       // Read CS Configuration Register (CSCR) register value in tmp, 
       // See Datasheet Page 29 , bit 3

	/* CODE HERE */

	// Check link status
        if (tmp & CSCR_LINK_STATUS)
                netif_carrier_on(netdev);
        else
                netif_carrier_off(netdev);

        printk (KERN_INFO "\n DEVICE CARRIER SET SUCCESSFULLY\n");
}
